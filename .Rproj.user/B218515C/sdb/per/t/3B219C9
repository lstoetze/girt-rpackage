{
    "collab_server" : "",
    "contents" : "#' ---\n#' title: \"Whose Dimension is it anyway: CCES Legislator and Citzins Scaling\"\n#' author: \"Lukas F. Stoetzer\"\n#' ---\n\n#' Script estimates irt models for CCES Study\n\n  # Libraries\n  library(pscl)\n\n  # Set values for mcmc\n  sample <- 120000\n  burnin <- 2000\n  thinin <- 100\n  \n  # Start Time\n  start.time <- Sys.time()\n  \n# CCES 08 ========================\n  \n# 1.1) Prepare Data  =========\n\n  # Load Data-set\n    load(\"in/cces2008_rollvote.Rdata\")\n  \n  # Legislators\n    rvs <- paste(\"rv\",c(1:9),sep=\"\")\n    ld <- as.matrix(rbind(sen110[,rvs],hou110[,rvs]))\n  \n  # Respondents\n    resp <- cces2008\n    rd <- as.matrix(resp[,rvs])\n  \n  # Starting Values to assure converagence\n    init_hou  <- ifelse(hou110$party==\"Republican\", 1, -1) # set republican start value at 1; democrat -1\n    init_sen <- ifelse(sen110$party==\"R\", 1, -1)   # set republican start value at 1; democrat -1\n    init_resp <- ifelse(resp$pid == 7, 1, \n                        ifelse(resp$pid== 1, -1, 0)) # set strong republican start value at 1; strong democrat -1; others 0\n    init_resp[is.na(init_resp)] <- 0\n    \n# 1.2) Legislators & Respondent scaling ======\n\n  # Legsilator Based Scaling\n   leg_08 <- ideal(rollcall(ld), \n                   maxiter=sample, thin=thinin, burnin=burnin,\n                   normalize=T,\n                   startvals=list(x= c(init_sen,init_hou)),\n                   store.item=TRUE)\n  \n  # Legsilator Based Scaling\n    resp_08 <- ideal(rollcall(rd), \n                     maxiter=sample, thin=thinin, burnin=burnin,\n                     normalize=T,\n                     startvals=list(x= init_resp),\n                     store.item=TRUE)\n     \n  # # 1.3) Sub-class Respondents =========\n  # \n  #   # Low Exposure and Independent\n  #     sel_int <- which(resp$polint_news %in% c(1,2,3) &\n  #                      resp$pid %in% c(3,4,5))\n  # \n  #     resp_08_IndLow <- ideal(rollcall(rd[sel_int,]), \n  #                             maxiter=sample, thin=thinin, burnin=burnin,\n  #                             normalize=T,\n  #                             startvals=list(x= init_resp[sel_int]),\n  #                             store.item=TRUE)\n  # \n  #   # High Interest Partisian\n  #     resp_08_PidHig <- ideal(rollcall(rd[-sel_int,]), \n  #                             maxiter=sample, thin=thinin, burnin=burnin,\n  #                             normalize=T,\n  #                             startvals=list(x= init_resp[-sel_int]),\n  #                             store.item=TRUE)\n\n  # 1.4) Post-Estimation ========= \n\n  # Save\n    save(leg_08, resp_08,\n         file=\"out/smpl/res_cces08_scaling.Rdata\")\n    rm(leg_08,resp_08)\n    \n  \n# 2) CCES 10 ========================\n  \n  # 2.1) Prepare Data  =========\n  \n  # Load Data-set\n    load(\"in/cces2010_rollvote.Rdata\")\n    \n  # Legislators\n    rvs <- paste(\"rv\",c(1:4,6:10),sep=\"\")\n    ld <- as.matrix(rbind(sen111[,rvs],hou111[,rvs]))\n    \n  # Respondents\n    resp <- cces2010\n    rd <- as.matrix(resp[,rvs])\n  \n  # Starting Values to assure converagence\n    init_hou  <- ifelse(hou111$party==\"Republican\", 1, -1) # set republican start value at 1; democrat -1\n    init_sen <- ifelse(sen111$party==\"R\", 1, -1)   # set republican start value at 1; democrat -1\n    init_resp <- ifelse(resp$pid == 7, 1, \n                        ifelse(resp$pid== 1, -1, 0)) # set strong republican start value at 1; strong democrat -1; others 0\n    init_resp[is.na(init_resp)] <- 0\n    \n  # 2.2) Legislators & Respondent scaling ======\n  \n  # Legsilator Based Scaling\n    leg_10 <- ideal(rollcall(ld), \n                    maxiter=sample, thin=thinin, burnin=burnin,\n                    normalize=T,\n                    startvals=list(x= c(init_sen,init_hou)),\n                    store.item=TRUE)\n  \n  # Legsilator Based Scaling\n    resp_10 <- ideal(rollcall(rd), \n                     maxiter=sample, thin=thinin, burnin=burnin,\n                     normalize=T,\n                     startvals=list(x= init_resp),\n                     store.item=TRUE)\n    \n    # # 2.3) Sub-class Respondents =========\n    # \n    # # Low Exposure and Independent\n    # sel_int <- which(resp$polint_news %in% c(1,2,3) &\n    #                    resp$pid %in% c(3,4,5))\n    # \n    # resp_10_IndLow <- ideal(rollcall(rd[sel_int,]), \n    #                         maxiter=sample, thin=thinin, burnin=burnin,\n    #                         normalize=T,\n    #                         startvals=list(x= init_resp[sel_int]),\n    #                         store.item=TRUE)\n    # \n    # # High Interest Partisian\n    # resp_10_PidHig <- ideal(rollcall(rd[-sel_int,]), \n    #                         maxiter=sample, thin=thinin, burnin=burnin,\n    #                         normalize=T,\n    #                         startvals=list(x= init_resp[-sel_int]),\n    #                         store.item=TRUE)\n    \n  # 2.4) Post-Estimation ========= \n  \n  # Save\n  save(leg_10,resp_10,\n       file=\"out/smpl/res_cces10_scaling.Rdata\")\n  \n  rm(leg_10,resp_10)\n  \n  \n# # 3) CCES 12 ========================\n#   \n#   # 2.1) Prepare Data  =========\n#   \n#   # Load Data-set\n#    load(\"in/cces2012_rollvote.Rdata\")\n#   \n#   # Legislators\n#     rvs <- paste(\"rv\",c(1:10),sep=\"\")\n#     ld <- as.matrix(rbind(sen112[,rvs],hou112[,rvs]))\n#     \n#   # Respondents\n#     resp <- cces2012\n#     rd <- as.matrix(resp[,rvs])\n#   \n#   # Starting Values to assure converagence\n#     init_hou  <- ifelse(hou112$party==\"Republican\", 1, -1) # set republican start value at 1; democrat -1\n#     init_sen <- ifelse(sen112$party==\"R\", 1, -1)   # set republican start value at 1; democrat -1\n#     init_resp <- ifelse(resp$pid == 7, 1, \n#                         ifelse(resp$pid== 1, -1, 0)) # set strong republican start value at 1; strong democrat -1; others 0\n#     init_resp[is.na(init_resp)] <- 0  \n#     \n#   # 2.2) Legislators & Respondent scaling ======\n#   \n#   # Legsilator Based Scaling\n#     leg_12 <- ideal(rollcall(ld), \n#                     maxiter=sample, thin=thinin, burnin=burnin,\n#                     normalize=T,\n#                     startvals=list(x= c(init_sen,init_hou)),\n#                     store.item=TRUE)\n#   \n#   # Legsilator Based Scaling\n#     resp_12 <- ideal(rollcall(rd), \n#                      maxiter=sample, thin=thinin, burnin=burnin,\n#                      normalize=T, \n#                      startvals=list(x= init_resp),\n#                      store.item=TRUE)\n#   \n#   # 2.3) Sub-class Respondents =========\n#     \n#     # Low Exposure and Independent\n#     sel_int <- which(resp$polint_news %in% c(1,2,3) &\n#                        resp$pid %in% c(3,4,5))\n#     \n#     resp_12_IndLow <- ideal(rollcall(rd[sel_int,]), \n#                             maxiter=sample, thin=thinin, burnin=burnin,\n#                             normalize=T,\n#                             startvals=list(x= init_resp[sel_int]),\n#                             store.item=TRUE)\n#     \n#     # High Interest Partisian\n#     resp_12_PidHig <- ideal(rollcall(rd[-sel_int,]), \n#                             maxiter=sample, thin=thinin, burnin=burnin,\n#                             normalize=T,\n#                             startvals=list(x= init_resp[-sel_int]),\n#                             store.item=TRUE)\n#     \n#   # 2.4) Post-Estimation ========= \n#   \n#   # Save\n#   save(leg_12,resp_12,resp_12_IndLow,resp_12_PidHig,\n#        file=\"out/smpl/res_cces12_scaling.Rdata\")\n#   \n#   rm(leg_12,resp_12,resp_12_IndLow,resp_12_PidHig)\n  \n  # Time Track\n  end.time <- Sys.time()\n  time.taken <- end.time - start.time\n  print(time.taken)\n\n",
    "created" : 1562165962526.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "727972247",
    "id" : "3B219C9",
    "lastKnownWriteTime" : 1562168241,
    "last_content_update" : 1562168241568,
    "path" : "~/Documents/Projekte/02_inprep/SpatialBeliefs/Manuscript/JointScal/src/calc/01_CCES_Scaling.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}