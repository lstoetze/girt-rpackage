library(girt)
library(girt)
library(girt)
exit
exit()
library(girt)
library(girt)
library(girt)
help("MCMCirt")
load("~/Documents/Projekte/02_inprep/SpatialBeliefs/Manuscript/JointScal/src/calc/in/cces2008_rollvote.Rdata")
X <- as.matrix(na.omit(hou110[,grep("rv",colnames(hou110))]))
r <- MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=1)
r <- MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=2)
r <- MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=4)
r <- MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=4)
r <- MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=6)
r$beta
r$beta[,,6]
library(girt)
library(girt)
help("MCMCirt")
load("~/Documents/Projekte/02_inprep/SpatialBeliefs/Manuscript/JointScal/src/calc/in/cces2008_rollvote.Rdata")
X <- as.matrix(na.omit(hou110[,grep("rv",colnames(hou110))]))
r <- MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=1)
r <- MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=2)
r <- MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=2)
library(girt)
r <- MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=1)
r <- MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=2)
library(girt)
library(girt)
help("MCMCirt")
load("~/Documents/Projekte/02_inprep/SpatialBeliefs/Manuscript/JointScal/src/calc/in/cces2008_rollvote.Rdata")
X <- as.matrix(na.omit(hou110[,grep("rv",colnames(hou110))]))
r <- MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=1)
r <- MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=2)
library(girt)
help("MCMCirt")
load("~/Documents/Projekte/02_inprep/SpatialBeliefs/Manuscript/JointScal/src/calc/in/cces2008_rollvote.Rdata")
X <- as.matrix(na.omit(hou110[,grep("rv",colnames(hou110))]))
r <- MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=1)
r <- MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=2)
library(rbenchmark)
install.packages("rbenchmark")
benchmark("1Chain"=MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=1),
"2Chain"=MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=2),
"3Chain"=MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=3)
)
library(rbenchmark)
benchmark("1Chain"=MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=1),
"2Chain"=MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=2),
"3Chain"=MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=3)
)
benchmark("1Chain"=MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=1),
"2Chain"=MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=2),
"3Chain"=MCMCirt(X,gibbs = 10000,burnin = 500, thin=1, chains=3),
replications = 1
)
library(girt)
library(girt)
help("MCMCirt")
load("~/Documents/Projekte/02_inprep/SpatialBeliefs/Manuscript/JointScal/src/calc/in/cces2008_rollvote.Rdata")
X <- as.matrix(na.omit(hou110[,grep("rv",colnames(hou110))]))
st <- Sys.time()
r <- MCMCirt(X,gibbs = 50000,burnin = 1000, thin=50, chains=1)
et <- Sys.time()
st2 <- Sys.time()
r <- MCMCirt(X,gibbs = 50000,burnin = 1000, thin=50, chains=4)
library(girt)
library(girt)
library(girt)
help("MCMCirt")
load("~/Documents/Projekte/02_inprep/SpatialBeliefs/Manuscript/JointScal/src/calc/in/cces2008_rollvote.Rdata")
X <- as.matrix(na.omit(hou110[,grep("rv",colnames(hou110))]))
st <- Sys.time()
r <- MCMCirt(X,gibbs = 50000,burnin = 1000, thin=50, chains=1)
et <- Sys.time()
library(rbenchmark)
benchmark("1" = {r <- MCMCirt(X,gibbs = 50000,burnin = 1000, thin=50, chains=1)},
"2" = {r <- MCMCirt(X,gibbs = 50000,burnin = 1000, thin=50, chains=2)})
sample_test <- create_sample(gamma=gt, Nl=400, Nc=2000, J = 9)
library(girt)
#' Defines Functions to create samples
#' ========================
create_sample <- function(J = 9, Nc = 500, Nl = 100, gamma=c(-0.6,0.7)){
# True Paramter alpha beta random draws
b <- rnorm(J,sd=1)
a <- rnorm(J,sd=1)
# Respondent covariates
K <- length(gamma)-1
Z <- cbind(1,matrix(rnorm(K*Nc,0,0.5),ncol=K))
thetal <- rnorm(Nl,sd=1)
thetac <- rnorm(Nc,sd=1)
thetac <- rnorm(Nc,sd=1)
# Construct responses
yl <- matrix(NA,Nl,J)
yc <- matrix(NA,Nc,J)
# Legislators
for(i in 1:Nl){
for(j in 1:J){
p <- pnorm((b[j]*thetal[i] - a[j]))
yl[i,j] <- rbinom(1,1,p)
}
}
# Citzins
for(i in 1:Nc){
for(j in 1:J){
p <- pnorm((b[j]*thetac[i] - a[j])/exp(Z[i,] %*% gamma))
yc[i,j] <- rbinom(1,1,p)
}
}
# return True Values
return(list("Yl"=yl,"Yc"=yc,"Z"=as.matrix(Z),
"alpha"=a, "beta"=b, "thetal"=thetal ,"thetac"=thetac,
"gamma"=gamma))
}
sample_test <- create_sample(gamma=gt, Nl=400, Nc=2000, J = 9)
gt=c(1,0.5)
sample_test <- create_sample(gamma=gt, Nl=400, Nc=2000, J = 9)
r <- MCMCirtG(sample_test$Yl,sample_test$Yc,sample_test$Z,burnin=500,gibbs = 1000,thin = 5,
chains=4,
prior_var_gamma = 10, proposal_var = 0.009)
library(girt)
sample_test <- create_sample(gamma=gt, Nl=400, Nc=2000, J = 9)
MCMCirt(X = sample_test$Yl, burnin = 100,gibbs = 1000, thin = 1, chains = 1)
r <- MCMCirt(X = sample_test$Yl, burnin = 100,gibbs = 1000, thin = 1, chains = 1)
r <- MCMCirt(X = sample_test$Yl, burnin = 100,gibbs = 1000, thin = 1, chains = 4)
setwd("~/Desktop")
dir()
Rcpp::Rcpp.package.skeleton("test")
dir()
setwd("~/Desktop/test")
library(girt)
library(girt)
gamma_conditional(Y=sample_test$Yc,X=sample_test$Z,
alpha = apply((apply(rl$alpha,2,cbind)),2,mean),
beta = apply((apply(rl$beta,2,cbind)),2,mean),
gamma=gt)
gamma_conditional
gamma_conditional()
library(girt)
gamma_conditional()
gamma_conditional(Y=sample_test$Yc,X=sample_test$Z,
alpha = apply((apply(rl$alpha,2,cbind)),2,mean),
beta = apply((apply(rl$beta,2,cbind)),2,mean),
gamma=gt)
sample_test <- create_sample(gamma=gt, Nl=400, Nc=2000, J = 9)
create_sample <- function(J = 9, Nc = 2000, Nl = 100, gamma=c(-0.6,0.7)){
# True Paramter alpha beta random draws
b <- rnorm(J,sd=1)
a <- rnorm(J,sd=1)
# Respondent covariates
K <- length(gamma)-1
Z <- cbind(1,matrix(rnorm(K*Nc,0,0.5),ncol=K))
thetal <- rnorm(Nl,sd=1)
thetac <- rnorm(Nc,sd=1)
thetac <- rnorm(Nc,sd=1)
# Construct responses
yl <- matrix(NA,Nl,J)
yc <- matrix(NA,Nc,J)
# Legislators
for(i in 1:Nl){
for(j in 1:J){
p <- pnorm((b[j]*thetal[i] - a[j]))
yl[i,j] <- rbinom(1,1,p)
}
}
# Citzins
for(i in 1:Nc){
for(j in 1:J){
p <- pnorm((b[j]*thetac[i] - a[j])/exp(Z[i,] %*% gamma))
yc[i,j] <- rbinom(1,1,p)
}
}
# return True Values
return(list("Yl"=yl,"Yc"=yc,"Z"=as.matrix(Z),
"alpha"=a, "beta"=b, "thetal"=thetal ,"thetac"=thetac,
"gamma"=gamma))
}
gt <- c(1,0.5,-0.5)
sample_test <- create_sample(gamma=gt, Nl=400, Nc=2000, J = 9)
rl <- MCMCirt(X=sample_test$Yl,
burnin=500,gibbs = 1000,thin = 5,
chains=4)
rc_var <- MCMCirt_var(Y=sample_test$Yc,X=sample_test$Z,
alpha = apply((apply(rl$alpha,2,cbind)),2,mean),
beta = apply((apply(rl$beta,2,cbind)),2,mean),
burnin=500,gibbs = 1000,thin = 5,
chains=4)
gamma_conditional(Y=sample_test$Yc,X=sample_test$Z,
alpha = apply((apply(rl$alpha,2,cbind)),2,mean),
beta = apply((apply(rl$beta,2,cbind)),2,mean),
gamma=gt)
gamma_conditional(Y=sample_test$Yc,X=sample_test$Z,
theta = apply((apply(rl$theta,2,cbind)),2,mean),
gamma=gt)
gamma_conditional(Y=sample_test$Yc,X=sample_test$Z,
theta = apply((apply(rl$theta,2,cbind)),2,mean),
gamma=gt, prior_var_gamma = 100)
gamma_conditional(Y=sample_test$Yc,X=sample_test$Z,
alpha = apply((apply(rl$alpha,2,cbind)),2,mean),
beta = apply((apply(rl$beta,2,cbind)),2,mea
theta = apply((apply(rl$theta,2,cbind)),2,mean),
gamma=gt, prior_var_gamma = 100)
gamma_conditional(Y=sample_test$Yc,X=sample_test$Z,
alpha = apply((apply(rl$alpha,2,cbind)),2,mean),
beta = apply((apply(rl$beta,2,cbind)),2,mean),
theta = apply((apply(rl$theta,2,cbind)),2,mean),
gamma=gt, prior_var_gamma = 100)
gamma_conditional(Y=sample_test$Yc,X=sample_test$Z,
alpha = apply((apply(rl$alpha,2,cbind)),2,mean),
beta = apply((apply(rl$beta,2,cbind)),2,mean),
theta = apply((apply(rl$theta,2,cbind)),2,mean),
gamma=gt, prior_var_gamma = 100, J =9)
gamma_conditional(Y=sample_test$Yc,X=sample_test$Z,
alpha = apply((apply(rl$alpha,2,cbind)),2,mean),
beta = apply((apply(rl$beta,2,cbind)),2,mean),
theta = apply((apply(rl$theta,2,cbind)),2,mean),
gamma=gt, prior_var_gamma = 100, J =9, N = nrow(sample_test$Yc))
gamma_conditional(Y=sample_test$Yc,X=sample_test$Z,
alpha = apply((apply(rl$alpha,2,cbind)),2,mean),
beta = apply((apply(rl$beta,2,cbind)),2,mean),
theta = apply((apply(rl$theta,2,cbind)),2,mean),
gamma=gt, prior_var_gamma = 100, J =9,
N = nrow(sample_test$Yc), K=3)
sample_test$Yc
sample_test$Z
gamma_conditional(Y=sample_test$Yc,X=sample_test$Z,
alpha = apply((apply(rl$alpha,2,cbind)),2,mean),
beta = apply((apply(rl$beta,2,cbind)),2,mean),
theta = apply((apply(rl$theta,2,cbind)),2,mean),
gamma=gt, prior_var_gamma = 100, J =9,
N = nrow(sample_test$Yc), K=3)
library(girt)
gamma_conditional(Y=sample_test$Yc,X=sample_test$Z,
alpha = apply((apply(rl$alpha,2,cbind)),2,mean),
beta = apply((apply(rl$beta,2,cbind)),2,mean),
theta = apply((apply(rl$theta,2,cbind)),2,mean),
gamma=gt, prior_var_gamma = 100, J =9,
N = nrow(sample_test$Yc), K=2)
apply((apply(rl$theta,2,cbind)),2,mean)
nrow(sample_test$Yc)
sample_test$theta
gamma_conditional(Y=sample_test$Yc,X=sample_test$Z,
alpha = apply((apply(rl$alpha,2,cbind)),2,mean),
beta = apply((apply(rl$beta,2,cbind)),2,mean),
theta = apply((apply(sample_test$thetac,1,cbind)),2,mean),
gamma=gt, prior_var_gamma = 100, J =9,
N = nrow(sample_test$Yc), K=2)
sample_test$thetac
gamma_conditional(Y=sample_test$Yc,X=sample_test$Z,
alpha = apply((apply(rl$alpha,2,cbind)),2,mean),
beta = apply((apply(rl$beta,2,cbind)),2,mean),
theta = sample_test$thetac,
gamma=gt, prior_var_gamma = 100, J =9,
N = nrow(sample_test$Yc), K=2)
gamma_conditional(Y=sample_test$Yc,X=sample_test$Z,
alpha = apply((apply(rl$alpha,2,cbind)),2,mean),
beta = apply((apply(rl$beta,2,cbind)),2,mean),
theta = sample_test$thetac,
gamma=gt, prior_var_gamma = 100, J =9,
N = nrow(sample_test$Yc), K=3)
gamma_conditional(Y=sample_test$Yc,X=sample_test$Z,
alpha = apply((apply(rl$alpha,2,cbind)),2,mean),
beta = apply((apply(rl$beta,2,cbind)),2,mean),
theta = sample_test$thetac,
gamma=gt, prior_var_gamma = 100, J =9,
N = nrow(sample_test$Yc), K=3)
update_gamma(Y=sample_test$Yc,X=sample_test$Z,
alpha = apply((apply(rl$alpha,2,cbind)),2,mean),
beta = apply((apply(rl$beta,2,cbind)),2,mean),
theta = sample_test$thetac,
gamma=gt, prior_var_gamma = 100, J =9,
N = nrow(sample_test$Yc), K=3,
a = 0)
library(girt)
gt <- c(1,0.5,-0.5)
rep <- 50
gamma_stat <- array(NA,c(length(gt),3,rep))
gr_stat <- array(NA,c(rep,length(gt)))
for(i in 1:rep){
sample_test <- create_sample(gamma=gt, Nl=400, Nc=2000, J = 9)
r <- MCMCirtG(sample_test$Yl,sample_test$Yc,sample_test$Z,burnin=500,gibbs = 1000,thin = 5,
chains=2,
prior_var_gamma = 10, proposal_var = 0.009)
gr_stat[i,] <- apply(r$gamma,2,gelman.rubin)
gamma_stat[,,i] <- t(apply(r$gamma,2,quantile,c(0.975,0.5,0.025))    )
}
save(gamma_stat,gr_stat,file="out/sim_res.Rdata")
save(gamma_stat,gr_stat,file="out/sim_res.Rdata")
setwd("~/Documents/Projekte/02_inprep/SpatialBeliefs/Manuscript/JointScal/src/calc")
save(gamma_stat,gr_stat,file="out/sim_res.Rdata")
gr_stat
str(gr_stat)
boxplot(gr_stat)
boxplot(gr_stat)
gamma_stat
str(gamma_stat)
str(gamma_stat[,,1:50])
str(gamma_stat[,,])
str(gamma_stat[1,,])
(gamma_stat[1,,])
t((gamma_stat[1,,]))
pointrang((gamma_stat[1,,]))
polot((gamma_stat[1,,]))
data.frame(gamma_stat[1,,])
data.frame(t(gamma_stat[1,,]))
df <- data.frame(t(gamma_stat[,1,]))
df
df
library(ggplot2)
library(reshape2)
df <- melt(data.frame(t(gamma_stat[,1,])))
head(df)
df <- data.frame(t(gamma_stat[,1,]))
names(df)
names(df) <- paste("b",1:3,sep="")
library(ggplot2)
library(reshape2)
df
df <- melt(df)
df <- melt(df)
df
df <- data.frame(t(gamma_stat[,1,]))
df
names(df) <- paste("b",1:3,sep="")
df <- melt(df)
df
ggplot(df) + geom_density(aes(y=value, group=variable))
ggplot(df) + geom_density(aes(x=value, group=variable))
ggplot(df) + geom_density(aes(x=value, fill=variable))
ggplot(df) + geom_density(aes(x=value, fill=variable)) + ylim(c(-1,1))
ggplot(df) + geom_density(aes(x=value, fill=variable)) + xlim(c(-1,1))
ggplot(df) + geom_density(aes(x=value, fill=variable)) + xlim(c(-1,3))
ggplot(df) + geom_density(aes(x=value, fill=variable),alpha=0.4) + xlim(c(-1,3))
ggplot(df) + geom_density(aes(x=value, fill=variable),alpha=0.4) + xlim(c(-1,3)) + theme_bw()
ggplot(df) + geom_density(aes(x=value, fill=variable),alpha=0.4) + xlim(c(-1,3)) + theme_minimal()
ggplot(df) + geom_density(aes(x=value, fill=variable),alpha=0.4) +
xlim(c(-1,3)) + theme_minimal() + geom_vline(xintercept=gt)
gt
df <- data.frame(t(gamma_stat[,2,]))
names(df) <- paste("b",1:3,sep="")
df <- melt(df)
library(ggplot2)
library(reshape2)
ggplot(df) +
geom_density(aes(x=value, fill=variable),alpha=0.4) +
xlim(c(-1,3)) + theme_minimal() + geom_vline(xintercept=gt)
df <- data.frame(t(gamma_stat[,1,]))
df
gamma_stat
df <- data.frame(t(gamma_stat[,2,]))
names(df) <- paste("b",1:3,sep="")
df <- melt(df)
library(ggplot2)
library(reshape2)
ggplot(df) +
geom_density(aes(x=value, fill=variable),alpha=0.4) +
xlim(c(-1,3)) + theme_minimal() + geom_vline(xintercept=gt)
?geom_density
ggplot(df) +
geom_density(aes(x=value, fill=variable),alpha=0.4, bw=2) +
xlim(c(-1,3)) + theme_minimal() + geom_vline(xintercept=gt)
ggplot(df) +
geom_density(aes(x=value, fill=variable),alpha=0.4, bw=0.1) +
xlim(c(-1,3)) + theme_minimal() + geom_vline(xintercept=gt)
ggplot(df) +
geom_density(aes(x=value, fill=variable),alpha=0.4, bw=0.01) +
xlim(c(-1,3)) + theme_minimal() + geom_vline(xintercept=gt)
ggplot(df) +
geom_density(aes(x=value, fill=variable),alpha=0.4, bw=0.2) +
xlim(c(-1,3)) + theme_minimal() + geom_vline(xintercept=gt)
ggplot(df) +
geom_density(aes(x=value, fill=variable),alpha=0.4, bw=0.05) +
xlim(c(-1,3)) + theme_minimal() + geom_vline(xintercept=gt)
ggplot(df) +
geom_density(aes(x=value, fill=variable),alpha=0.4, bw=0.05) +
geom_histogram(aes(x=value, fill=variable),alpha=0.4, bw=0.05) +
xlim(c(-1,3)) + theme_minimal() + geom_vline(xintercept=gt)
ggplot(df) +
geom_density(aes(x=value, fill=variable),alpha=0.4, bw=0.05) +
geom_histogram(aes(x=value, fill=variable),alpha=0.4, binwidth=0.05) +
xlim(c(-1,3)) + theme_minimal() + geom_vline(xintercept=gt)
ggplot(df,aes(x=value, fill=variable)) +
geom_density(aes(y = ..density..),alpha=0.4, bw=0.05) +
geom_histogram(alpha=0.4, binwidth=0.05) +
xlim(c(-1,3)) + theme_minimal() + geom_vline(xintercept=gt)
ggplot(df,aes(x=value, fill=variable)) +
geom_density(aes(y = ..density..),alpha=0.4, bw=0.05) +
geom_histogram(aes(y = ..density..),alpha=0.4, binwidth=0.05) +
xlim(c(-1,3)) + theme_minimal() + geom_vline(xintercept=gt)
ggplot(df,aes(x=value, group=variable)) +
geom_density(aes(y = ..density..),alpha=0.4, bw=0.05) +
geom_histogram(aes(y = ..density..),alpha=0.4, binwidth=0.05) +
xlim(c(-1,3)) + theme_minimal() + geom_vline(xintercept=gt)
ggplot(df,aes(x=value, fill=variable)) +
geom_density(aes(y = ..density..),alpha=0.4, bw=0.05) +
geom_histogram(aes(y = ..density..),alpha=0.4, binwidth=0.05) +
xlim(c(-1,3)) + theme_minimal() + geom_vline(xintercept=gt)
ggplot(df,aes(x=value)) +
geom_density(aes(y = ..density..,fill=variable),alpha=0.4, bw=0.05) +
geom_histogram(aes(y = ..density..),alpha=0.4, binwidth=0.05) +
xlim(c(-1,3)) + theme_minimal() + geom_vline(xintercept=gt)
ggplot(df,aes(x=value, fill=variable)) +
geom_density(aes(y = ..density..),alpha=0.4, bw=0.05) +
geom_histogram(aes(y = ..density..),alpha=0.4, binwidth=0.05) +
xlim(c(-1,3)) + theme_minimal() + geom_vline(xintercept=gt)
res$
res
res
r
library(girt)
library(girt)
library(girt)
library(girt)
library(girt)
library(girt)
help(pnorm)
install.packages("RcppAramadillio")
install.packages("RcppArmadillo")
library(girt)
qnorm
norm_rand
load("in/cces2008_rollvote.Rdata")
library(girt)
rvs <- paste("rv",c(1:9),sep="")
ld <- as.matrix(na.omit(rbind(sen110[,rvs],hou110[,rvs])))
resp <- cces2008[,grep("rv|polint_news|polint|pid|ideo",colnames(cces2008))]
s <- apply(resp,1,function(x) !any(is.na(x)))
resp_subset <- resp[s,]
resp_subset
setwd("~/Documents/Projekte/02_inprep/SpatialBeliefs/Manuscript/JointScal/src/calc")
resp <- cces2008[,grep("rv|polint_news|polint|pid|ideo",colnames(cces2008))]
s <- apply(resp,1,function(x) !any(is.na(x)))
resp_subset <- resp[s,]
# 2008 CCES Roll Call Votes
load("in/cces2008_rollvote.Rdata")
# Load postdraws_ghirt Function
library(girt)
# Sort Data
# Legislator Data
rvs <- paste("rv",c(1:9),sep="")
ld <- as.matrix(na.omit(rbind(sen110[,rvs],hou110[,rvs])))
# Respondent Data
resp <- cces2008[,grep("rv|polint_news|polint|pid|ideo",colnames(cces2008))]
s <- apply(resp,1,function(x) !any(is.na(x)))
resp_subset <- resp[s,]
resp_subset
sim(resp_subset)
dim(resp_subset)
length(s)
# 2008 CCES Roll Call Votes
load("in/cces2008_rollvote.Rdata")
# Load postdraws_ghirt Function
library(girt)
# Start Time
start.time <- Sys.time()
# Sort Data
# Legislator Data
rvs <- paste("rv",c(1:9),sep="")
ld <- as.matrix(na.omit(rbind(sen110[,rvs],hou110[,rvs])))
# Respondent Data
resp <- cces2008[,grep("rv|polint_news|polint|pid|ideo",colnames(cces2008))]
s <- apply(resp,1,function(x) !any(is.na(x)))
resp_subset <- resp[s,]
d <-  resp_subset  # resp_subset[sample(1:nrow(resp_subset),20000),]
rd <- as.matrix(d[,1:9])
# Covariates
Z <- as.matrix(cbind(1, # Intercept
d[,"polint_news"]-1, # Interest in News, baseline: low int
d[,"polint"]-1, # Interest in News, baseline: low int
abs(d[,"pid"]-4 ) # Strength Party identification
))
# Estimate Model
r <- MCMCirtG(Yl = ld,Yc = rd, X = Z,
burnin=200,gibbs = 200,thin = 5,
chains=1,
prior_var_gamma = 100, proposal_var = 0.009)
#
#
# df <- reshape2::melt(r$gamma[,4,])
# library(ggplot2)
# ggplot(df) + geom_line(aes(y=value,x=Var1,group=Var2,col=factor(Var2))) + theme_minimal()
#
#
# r$accept_rate
# rg <- as.data.frame(t(apply(r$gamma,2,quantile,c(0.05,0.5,0.95))))
# names(rg) <- c("low","mid","high")
#
# rg$int <- as.factor(1:nrow(rg))
# names <- c("intercept","newsint","polint", "pid strength")
# levels(rg$int) <- names
#
# library(ggplot2)
# ggplot(rg) + geom_pointrange(aes(x=int,y=mid,ymin=low, ymax=high)) +
#   coord_flip() + geom_hline(yintercept = 0,col="red")
#
# K <- ncol(r$gamma)
# par(mfrow=c(4,1))
# for(k in 1:K ) plot(r$gamma[,k],type="l")
# Time Track
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
print(time.taken)
install.packages("RcppProgress")
remove.packages("girt")
# Libraries
setwd("~/Documents/Projekte/01_underreview/SpatialBeliefs/Manuscript/src/calc")
library(girt)
library(girt)
library(girt)
